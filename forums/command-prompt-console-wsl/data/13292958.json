{"id":"13292958","link":"https://wpdev.uservoice.com/forums/266908-command-prompt-console-windows-subsystem-for-l/suggestions/13292958-rethink-your-strategy-on-how-the-linux-bash-integr","title":"Rethink your strategy on how the linux/bash integration should work","body":"I'm pleased to see Microsoft making the effort to bring bash to Windows, unfortunately I feel like the approach taken is mostly cosmetic and segregates POSIX applications rather than embracing them.  Some comments on the \"Run Bash on Ubuntu on Windows\" rightly highlight that this is slightly better Ubuntu VM with samba mounts.","votes":"62","user":"https://wpdev.uservoice.com/forums/266908-command-prompt-console-windows-subsystem-for-l","datetime":"2016-04-03","comments":[{"user":"https://wpdev.uservoice.com/users/57825490-meteorhead","datetime":"2016-07-04","body":"Perhaps they need be separated, because they differ too much. *nix has a root user, able to do everything. Windows has Administrator privileges (not a standalone user), but it is not capable of doing everything. Some actions can only be taken by the System user. There is really no good mapping to POSIX permissions."},{"user":"https://wpdev.uservoice.com/users/163455183-antoine-leca","datetime":"2016-04-29","body":"Mmmm... The former POSIX subsystem (Interix, SFU, SUA) did more or less what you are proposing (it was not Win32 executables originally, but with Interix-added support they were inter-operatable) and it did not perform very well. I believe the new approach, with a strong bias toward existing, tested, up-to-date etc. packages available out-of-the-box, is more likely to have success."},{"user":"https://wpdev.uservoice.com/users/163124667-negi","datetime":"2016-04-27","body":"I think one of the reasons why more integration could be a problem is that if Microsoft effectively sandboxes the opensource software and simply runs it with the NT-Kernel with the Linux subsystem layer serving as a drop-in replacement for the Linux kernel, Microsoft has no risk of legal liability, forcing them to expose some of the unpublished interfaces of the NT Kernel.  "},{"user":"https://wpdev.uservoice.com/users/156431865-o9000","datetime":"2016-04-03","body":"&gt; - Why should I have an emulated FHS structure?"}]}