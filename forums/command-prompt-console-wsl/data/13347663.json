{"id":"13347663","link":"https://wpdev.uservoice.com/forums/266908-command-prompt-console-windows-subsystem-for-l/suggestions/13347663-symlinks-and-pathing","title":"Symlinks and pathing.","body":"Currently getting \"Operation not permitted\" with ln -s (which I believe is due to a filesystem incompatibility). Also it would be phenomenal to see slash paths adopted across the filesystem.","votes":"148","user":"https://wpdev.uservoice.com/users/157703532-jag","datetime":"2016-04-07","comments":[{"user":"https://wpdev.uservoice.com/users/860510110-filip-o%C5%A1%C4%8D%C3%A1dal","datetime":"2018-10-19","body":"ln -s works fine, I am using it all day long"},{"user":"https://wpdev.uservoice.com/users/695281537-wsluser","datetime":"2018-03-27","body":"Forward slashes and Back slashes are now interoperable between Windows and WSL. This means your symlinks should work. Just make sure you use the same slash for the entire path and don't mix them up like /mnt/c\\system32 or C:\\.../etc/. Instead do /mnt/c/system32 or C:\\....\\etc\\ in your scripts and it will run blissfully unaware of what's windows and what's WSL. A huge interop barrier that's been released here. With the appropiate Linux permissions also in Windows ACL, interop should be far better with 1803."},{"user":"https://wpdev.uservoice.com/users/336950908-nitai","datetime":"2017-02-24","body":"ln -s works with the latest 15042 build"},{"user":"https://wpdev.uservoice.com/users/252716617-andrew-t-finnell","datetime":"2016-09-24","body":"The issue here is that there is a HUGE, MAJOR problem with 'Dir' symlinks on Windows. NTFS Junctions work beautifully until one realizes that no software understands the directory is a Junction Symlink, then proceeds to wipe ALL the files in that dir. "}]}