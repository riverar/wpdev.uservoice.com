{"id":"14840844","link":"https://wpdev.uservoice.com/forums/266908-command-prompt-console-windows-subsystem-for-l/suggestions/14840844-use-interoperable-ntfs-symlinks-in-drvfs-when-poss","title":"Use interoperable NTFS symlinks in DrvFS when possible","body":"From recent blog post I understand a new type of reparse point was introduced to support symlinks. This new reparse point type is not understood by windows.","votes":"117","user":"https://wpdev.uservoice.com/users/177554493-neville-bagnall","datetime":"2016-06-17","comments":[{"user":"https://wpdev.uservoice.com/users/824839036-nomike","datetime":"2018-07-18","body":"This is also a feature I highly would like to see as it's hard at the moment to interchangeably work on a git checkout with symlinks from win32 and wsl based tools."},{"user":"https://wpdev.uservoice.com/users/432091942-david-noble","datetime":"2017-08-09","body":"We need interoperable symlinks. I would leave the interop mechanism to the engineers. It does, however, seem fitting to use the native symlink format on each file system. It also sees fitting that any subsystem should be able to read and make sense of the attributes on any other subsystem's files."},{"user":"https://wpdev.uservoice.com/users/78392490-daniel-llewellyn","datetime":"2017-02-10","body":"I think the better option is to wait until Windows can access the WSL filesystem per another ask, respecting permissions etc, and when that is done add support into Win32 to understand the new reparse point."}]}