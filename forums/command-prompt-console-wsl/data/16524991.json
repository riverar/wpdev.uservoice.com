{"id":"16524991","link":"https://wpdev.uservoice.com/forums/266908-command-prompt-console-windows-subsystem-for-l/suggestions/16524991-wsl-wayland-display-manger-support-may-be-easie","title":"WSL: wayland/display manger support , may be easier or more efficient to implement then xorg","body":"I would rather see this then xorg it would likely be more efficient in the long run then trying to cobbled together some hacked up version of x\n<br>wayland is closer to the kernel it would pair nicely with WSL","votes":"165","user":"https://wpdev.uservoice.com/users/259438414","datetime":"2016-10-06","comments":[{"user":"https://wpdev.uservoice.com/users/900064159-aaron-muir-hamilton","datetime":"2019-05-12","body":"On WSL2 it'd be interesting to see how this would work, acceleration would be nice, hard to say how that would work out. "},{"user":"https://wpdev.uservoice.com/users/899566444-miguel-de-icaza","datetime":"2019-05-09","body":"Now more relevant than ever :-)"},{"user":"https://wpdev.uservoice.com/users/880912873-leonardo-b","datetime":"2019-01-21","body":"Vulkan is indeed already supported by modern video card drivers on windows (for roughly the same video cards which support DX12), it would just be a matter to implement a video driver which exposes that interface, plus a bit more calls for configuration (i.e., display binding, setting brightness etc). It would also be necessary though to implement the input api. Note however that as of now the work on linux side is not completed yet (in particular, display binding and other nice things are still accessed though the DRI interface)\n"},{"user":"https://wpdev.uservoice.com/users/868599814-bernd-paysan","datetime":"2018-11-13","body":"Also note that the X server only supports OpenGL up to version 1.4, which corresponds roughly to DX9, and is completely outdated. It's so outdated that indirect rendering is normally turned off on Linux X Servers. Wayland apps render using OpenGL ES 2/3 or Vulkan. OpenGL and Vulkan drivers in Linux are vendor specific (only the free Mesa drivers go through an official kernel infrastructure), anyhow, so the way to implement this is to create a driver library similar to NVidia's, which can bypass all official stable kernel interfaces, and just establish a rather direct connection to an OpenGL or Vulkan driver on the Windows side."},{"user":"https://wpdev.uservoice.com/users/214016271-harry-gindi","datetime":"2016-10-10","body":"If they do the CUDA thing, this is basically a matter of running Wayland for Windows over TCP."}]}