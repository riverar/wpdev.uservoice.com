{"id":"16893352","link":"https://wpdev.uservoice.com/forums/266908-command-prompt-console-windows-subsystem-for-l/suggestions/16893352-host-an-apt-repository-specifically-for-wsl-packag","title":"Host an apt repository specifically for WSL packages, configured by default in WSL sources.list","body":"I'm pretty sure I'm not the only person with or soon to have a Linux-side package that is specific to the WSL environment.","votes":"49","user":"https://wpdev.uservoice.com/users/194559612-alistair-cerebrate-young","datetime":"2016-10-31","comments":[{"user":"https://wpdev.uservoice.com/users/14654261-eli-young","datetime":"2016-11-21","body":"It seems like using PPAs should be sufficient for this use case: <a rel=\"nofollow noreferrer\" href=\"https://help.ubuntu.com/community/PPA\">https://help.ubuntu.com/community/PPA</a>"},{"user":"https://wpdev.uservoice.com/users/194559612-alistair-cerebrate-young","datetime":"2016-10-31","body":"To clarify, I'm talking specifically about those packages which *only* make sense in a WSL context, because they necessarily interact with the host Windows system. My own wabashd would be an example, which is a Linux binary worthless on a Linux system because it exists only to communicate across the boundary with its Windows counterpart. Utilities equivalent to some of the Windows-functions-in-UNIX-context utilities in the MKS Toolkit, et al., would be another - and as WSL gains more and more users implementing more and more things, the number of potential cross-boundary tools and shims will only grow. "}]}