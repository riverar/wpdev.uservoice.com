{"id":"19182355","link":"https://wpdev.uservoice.com/forums/266908-command-prompt-console-windows-subsystem-for-l/suggestions/19182355-run-wsl-binaries-in-windows-without-bash-exe-c","title":"Run WSL binaries in Windows without 'bash.exe -c'","body":"It would be nice for Windows to be able to run binaries in WSL without needing to prefix 'bash.exe -c'. The main reason for this would be editor integration. For example, VS Code language extensions require the binary for the language to be in your PATH and often do not work without it. It seems like a waste to install the language in both Windows and WSL just to get editor integration.","votes":"85","user":"https://wpdev.uservoice.com/users/369326512-ezinwa-okpoechi","datetime":"2017-05-06","comments":[{"user":"https://wpdev.uservoice.com/users/187927875-jari-pennanen","datetime":"2018-07-14","body":"Reason this would be amazing is that it could potentially allow to run Haskell and other developer tools 'natively', e.g. if VSCode extension expects to find Haskell Ide Engine \"hie.exe\" it could just use the ELF binary instead."},{"user":"https://wpdev.uservoice.com/users/805294864-sky-schulz","datetime":"2018-06-10","body":"Second Chris Hacking's comment: PATH order should determines priority."},{"user":"https://wpdev.uservoice.com/users/676442494","datetime":"2017-11-29","body":"I made a simple batch script and bash wrapper that enables you to call aliases to linux binaries from windows. Check it out on github: <a rel=\"nofollow noreferrer\" href=\"https://github.com/leongrdic/wsl-alias\">https://github.com/leongrdic/wsl-alias</a>"},{"user":"https://wpdev.uservoice.com/users/160182792-chris-hacking","datetime":"2017-07-29","body":"This can be scripted, such that the \"binary\" is actually a script that invokes bash -c (or whatever other Linux subsystem you want to use). Inconvenient, though, so I support letting us invoke them directly. However, I disagree with the \"Windows should have higher priority\"; priority should be determined 100% by the PATH environment variable, just as it is on Windows without WSL and within WSL when your path holds both Linux and Windows binaries."}]}