{"id":"32533093","link":"https://wpdev.uservoice.com/forums/266908-command-prompt-console-windows-subsystem-for-l/suggestions/32533093-map-wsl-process-id-to-windows-process-id","title":"Map WSL process ID to Windows process ID","body":"Currently there appears no clean way to get the corresponding Windows process ID of a running WSL process. I can inspect the PIDs of running processes in Windows taskmanager or with the tasklist command from bash on WSL as in: ","votes":"52","user":"https://wpdev.uservoice.com/users/226061323-robert-oeffner","datetime":"2017-12-06","comments":[{"user":"https://wpdev.uservoice.com/users/139984893-ken-c","datetime":"2018-05-28","body":"Concrete suggestion is /proc/[pid]/winpid per github #3174"},{"user":"https://wpdev.uservoice.com/users/58070608-erkin-alp-g%C3%BCney","datetime":"2018-04-25","body":"They should have been equal."},{"user":"https://wpdev.uservoice.com/users/226061323-robert-oeffner","datetime":"2017-12-14","body":"On a related note, WSL does not seem able to properly control win32 binaries that have been started from WSL. If notepad is started under WSL and then later killed from WSL that still leaves notepad running. This complicates writing bash scripts interacting both with Linux and with win32 binaries; the result of checking for a running win32 process with say the Linux \"pidof\" command cannot be trusted."}]}