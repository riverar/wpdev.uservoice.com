{"id":"11007384","link":"https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/11007384-include-the-wpf-style-wrappanel","title":"Include the WPF-style WrapPanel","body":"Inexplicably, the UWP does not include the WPF WrapPanel that was introduced nearly 10 years ago. This panel is similar to a StackPanel but if there are too many items to fit in a row the subsequent items are displayed in the next row down. There are other panels in the UWP that do something similar, like the WrapGrid, but this doesn’t work well if the items are variable size. And with the VariableSizedWrapGrid you must hardwire the column-span and row-span of each item to ensure everything fits. One simple example where the WrapPanel is essential is when displaying a “tag cloud”. The WrapGrid makes it possible to display a fully adaptable UI since as the container gets narrower on small screens everything can still be seen. But it is not just for tag clouds. The WrapPanel behavior is how items flow in HTML. It is astounding to me that such a useful UI control – one that Microsoft built years ago and with behavior that powers nearly every HTML page in existence – was left out of the UWP.","votes":"14","user":"https://wpdev.uservoice.com/users/16781667-jmagaram","datetime":"2015-12-08","comments":[{"user":"https://wpdev.uservoice.com/users/57741400-deltakosh","datetime":"2017-01-31","body":"We introduced WrapPanel in UWP Community Toolkit: <a rel=\"nofollow noreferrer\" href=\"http://docs.uwpcommunitytoolkit.com/en/dev/controls/WrapPanel/\">http://docs.uwpcommunitytoolkit.com/en/dev/controls/WrapPanel/</a>"},{"user":"https://wpdev.uservoice.com/users/68344437-clint-rutkas-msft","datetime":"2015-12-08","body":"@jmagaram, Tim Heuer wrote Callisto.  He is one of the primary people behind XAML :)  I am not closing this out as it is not in the official framework.  If you want other controls, please open up individual UserVoice items."},{"user":"https://wpdev.uservoice.com/users/16781667-jmagaram","datetime":"2015-12-08","body":"That is good to know. I always have a lot more confidence in controls provided directly by Microsoft. My feedback really covers a slew of controls/features that existed in WPF and Silverlight that somehow didn't get ported to UWP including TreeView and DockPanel and Adorner. There was a legitimate need for these controls which is why they ended up being built and distributed with WPF. The need for these things has NOT gone away. Instead we developers are now forced to do without (like not showing or manipulating any hierarchical data), or buy controls from some other company, or build our own. It is infuriating that these capabilities once existed on the Microsoft platform - many years ago - but were removed. While scanning the Microsoft developer docs on .Net I keep finding solutions to my problems but then later realize it only works on WPF and not UWP. Why can't they be ported? Is there any plan to bring the UWP platform capability closer to WPF?"}]}