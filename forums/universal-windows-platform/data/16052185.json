{"id":"16052185","link":"https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/16052185-processlauncher-for-desktop-apps","title":"ProcessLauncher for Desktop apps","body":"IoT introduced the Windows.System.ProcessLauncher for starting arbitrary programs (like Process.Start in .NET). Add this for Side-loaded or enterprise distributed apps on Desktop devices","votes":"38","user":"https://wpdev.uservoice.com/users/77584557-peter-foot","datetime":"2016-09-13","comments":[{"user":"https://wpdev.uservoice.com/users/339939613-neme","datetime":"2017-04-01","body":"We absolutely need this and not only for enterprise customers. This needs to be another capability in the appxmanifest. A File Explorer app absolute needs to open any kind of exe. Not only that, it would be cool to have features such as Open with command line, Open bash shell here... everything."},{"user":"https://wpdev.uservoice.com/users/68344437-clint-rutkas-msft","datetime":"2016-12-02","body":"@monto, solid suggestion.  With API suggestions, providing scenarios around how different people would want to use them helps guide design decisions."},{"user":"https://wpdev.uservoice.com/users/290325614-monto","datetime":"2016-11-29","body":"Clint Rutkas, do you understand that there could file manager apps better than your file explorer, that would actually look dumb if they can not launch exe files?"},{"user":"https://wpdev.uservoice.com/users/68344437-clint-rutkas-msft","datetime":"2016-09-13","body":"Can you help provide real world scenarios where this is needed?  Is this apps beyond UWP apps such as launching smss.exe (Sql server management studio)?"},{"user":"https://wpdev.uservoice.com/users/68344437-clint-rutkas-msft","datetime":"2016-02-03","body":"The \"why\" is that is breaking the UWP sandbox model."},{"user":"https://wpdev.uservoice.com/users/142653645-tom","datetime":"2016-02-03","body":"I'm adding custom commands to Cortana, and although this works, I cannot call any processes to do my commands - such as shut down my machine."},{"user":"https://wpdev.uservoice.com/users/14310772-mal-ball","datetime":"2014-03-12","body":"I am porting an app written for windows desktop which uses the System.Diagnostics.Process to start Photoshop with an image of choice. I have achieved this in my Windows Store version using the Windows.Storage.Search.QueryOptions and the Windows.System.Launcher.LaunchFileAsy method then I watch the folder for any changes, unfortunately this only watches the folder and if Photoshop is closed without saving the file to the watched folder there is no way to find this out within the program unlike the Process api."}]}