{"id":"18938764","link":"https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/18938764-enable-rendering-pipeline-access-in-the-mapcontrol","title":"Enable rendering pipeline access in the MapControl (like VirtualEarth)","body":"We have a very large WPF application built upon the Virtual Earth API with heavy customization of the rendering pipeline.  We are exploring moving forward with UWP, but currently there is no way to access the pipeline to add custom shaders and models like we do now in Virtual Earth with Microsoft.MapPoint.Graphics3D.GraphicsEngine3D and Microsoft.MapPoint.Rendering3D.Scene.Step.  Please add the ability to access the rendering pipeline to the MapControl class.","votes":"4","user":"https://wpdev.uservoice.com/users/358482478-josh-u","datetime":"2017-04-14","comments":[{"user":"https://wpdev.uservoice.com/users/358482478-josh-u","datetime":"2017-05-04","body":"Certainly.  Among the things we want to be able to do are render 3D models of buildings including their interiors, semi-transparent volume primitives like cubes and domes, and project raster imagery onto terrain. Most importantly, we need the ability to render thousands of entities (like points/placemarks) simultaneously, and for entities that move, we need to display their trails over time.  \n<br>  We produce situational awareness software.  Consider the scenario of tracking police and EMS vehicles in Miami during a hurricane.  You want to see each of the vehicles' paths for the previous sixteen hours, the current wind flow vector field from weather sensors in the area, and cumulatively display the locations of every lightning strike for the same time period, which could be in the tens of thousands.  You also want to see where incident hotspots are for the past three days in the form of a heat map dynamically generated in real time in a shader.\n<br>  We do a lot of heavy work now atop Virtual Earth, and having access to the rendering pipeline makes this all possible.  Without this ability, we can't make the jump from the aging DirectX 9 and WPF to a modern app."}]}