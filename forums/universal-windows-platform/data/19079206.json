{"id":"19079206","link":"https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/19079206-clipboard-content-should-persist-even-if-it-contai","title":"Clipboard content should persist even if it contains a delayed format","body":"I've noticed that when you create a DataPackage containing both data provided directly (let's say text, using SetData) and delayed formats like a bitmap (using SetDataProvider), when closing the application the whole clipboard content is cleared.\n<br>I expect that the content set directly (the text) to persist after closing the application.","votes":"13","user":"https://wpdev.uservoice.com/users/257278261-andrei-bucur","datetime":"2017-04-28","comments":[{"user":"https://wpdev.uservoice.com/users/214049478-me","datetime":"2018-05-31","body":"If you do change this, please also allow clipboard access from the background: <a rel=\"nofollow noreferrer\" href=\"https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/33131215-full-clipboard-access-in-background-unfocused-app\">https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/33131215-full-clipboard-access-in-background-unfocused-app</a>  as we're using this in order to clear the clipboard from the background and changing this will break our app."},{"user":"https://wpdev.uservoice.com/users/257278261-andrei-bucur","datetime":"2017-04-28","body":"It seems that this is not really related to the delayed data formats but with the application not calling Clipboard::Flush. I wouldn't mind calling that function but it defeats the purpose of the data providers as Flush() will also automatically request the delayed formats as well."}]}