{"id":"34665232","link":"https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/34665232-uielement-previewkeydown-event-unreliable","title":"UIElement.PreviewKeyDown Event unreliable","body":"Super glad you guys added this event to the UWP controls. It is the only way I have found to grab keyboard events before a control does something I don't want in my app. I do wish it was more reliable though. Events don't always route up to the root control (in my case a Page) as one might expect with an event that uses the \"Tunneling Routing Strategy\" as described in the docs. In particular I've found if a Windows.UI.Xaml.Controls.ScrollViewer has focus then the PreviewKeyDownEvent on the root Page control never gets fired. The PreviewKeyDownEvent is still useful for stopping controls from doing their keydown behavior, it's just not great for doing anything additional without also adding a Window.Current.CoreWindow.KeyDown event handler to catch events that don't get caught in the PreviewKeyDown event. It's definitely useful, but it would be amazing if it always worked!","votes":"1","user":"https://wpdev.uservoice.com/users/759945163","datetime":"2018-06-26","comments":[]}