{"id":"36095386","link":"https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/36095386-get-rid-of-idl-for-c-winrt-components","title":"Get rid of .idl for C++/WinRT Components","body":"I've tried using WinRT/C++ Components and it's just a terrible experience. One thing that will help is just get rid of the .idl requirement. I don't think C++/CX needed anything like that. And it's just a text file, VS doesn't even understand it, so we've gone backwards 20 years. And I can't even get the VS template to compile, and that's just the simplest example. ","votes":"3","user":"https://wpdev.uservoice.com/users/211182684-gavin-williams","datetime":"2018-11-24","comments":[{"user":"https://wpdev.uservoice.com/users/211182684-gavin-williams","datetime":"2019-09-05","body":"So in order to satisfy people who complain about hats and non standard C++, we have to use a more complicated, difficult and laborious system with a higher barrier to entry involving both standard C++ and an additional language requirement that has no editing support whatsoever - which is also not standard C++ I might add and adds a high fragility to the solution that didn't exist at all in C++/CX. OK, gee, glad we don't have those hats in our C++ code anymore."},{"user":"https://wpdev.uservoice.com/users/901836490","datetime":"2019-05-23","body":"There is no conceivable way to get rid of IDL files in a Standard C++ setting (which is one of the goals of C++/WinRT). Introducing custom attributes essentially means relying on implementation-defined behavior; C++/WinRT would no longer be Standard C++."},{"user":"https://wpdev.uservoice.com/users/901508638","datetime":"2019-05-23","body":"I completely agree with the statement Gavin made. After spending two full days trying to port a C++/CX application to C++/WinRT I had to give up because it was just consuming too much time. The documentation about MIDL might suffice for a simple demo application but for converting a full fledged C++/CX it is pretty much useless."}]}