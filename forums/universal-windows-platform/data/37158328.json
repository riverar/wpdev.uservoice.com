{"id":"37158328","link":"https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/37158328-strange-flyout-sizing-behavior","title":"Strange flyout sizing behavior","body":"The way flyouts size themselves is quite strange. I notice that for some reason when they measure their content, the bounds they provide use MaxWidth and MaxHeight from the FlyoutPresenter style but the bounds are not limited to the window width or height. In my opinion, it should take the minimum with the window width/height (except in special circumstances when the flyout is allowed to exceed the window bounds). Or else, it should resize based on its content.\n<br>It was quite simple for me to retstrict to window bounds using my own Flyout/FlyoutPresenter derived classes as follows.\n<br>    public class CustomFlyout : Flyout {\n<br>        protected override Control CreatePresenter() {\n<br>            return new CustomFlyoutPresenter() { Style = FlyoutPresenterStyle, Content = Content };\n<br>        }\n<br>    }\n<br>    public class CustomFlyoutPresenter : FlyoutPresenter {\n<br>        protected override Size MeasureOverride(Size availableSize) {\n<br>            return base.MeasureOverride(new Size(Math.Min(availableSize.Width, Window.Current.Bounds.Width), Math.Min(availableSize.Height, Window.Current.Bounds.Height)));\n<br>        }\n<br>    }\n<br>Something else I couldn't understand was that with the above code, the flyout also resized in response to changes to the size of controls in the flyout, whereas without the MeasureOverride part, it did not. I don't really understand what's happening there...","votes":"1","user":"https://wpdev.uservoice.com/users/251695348-ben-stevens","datetime":"2019-03-20","comments":[]}