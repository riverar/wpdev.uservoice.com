{"id":"9333168","link":"https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/9333168-ancestor-binding-missing","title":"Ancestor binding missing","body":"Currently the RelativeSourceMode only supports None, TemplatedParent and Self.","votes":"87","user":"https://wpdev.uservoice.com/users/52944168-justin-liu","datetime":"2015-08-14","comments":[{"user":"https://wpdev.uservoice.com/users/357659332-andrew-burnett-thompson","datetime":"2017-04-13","body":"I implemented a cross-platform workaround for FindAncestor binding in WPF/UWP. It's not pretty but it works. "},{"user":"https://wpdev.uservoice.com/users/149036856-martin","datetime":"2016-10-22","body":"An other scenario why ancestor binding is required: \n<br><a rel=\"nofollow noreferrer\" href=\"http://stackoverflow.com/questions/11857505/how-do-i-do-bindings-in-itemcontainerstyle-in-winrt\">http://stackoverflow.com/questions/11857505/how-do-i-do-bindings-in-itemcontainerstyle-in-winrt</a>\n<br>The provided \"solution\" on stackoverflow is only a workaround!"},{"user":"https://wpdev.uservoice.com/users/149036856-martin","datetime":"2016-08-05","body":"Useage Scenarios of RelativeSource:\n<br>(This could also be achieved with ElementName, but requires setting a Name for the TextBox. With the AncetoryType Binding we can just copy/paste the KeyBinding, so we prefer the AncetoryType solution )\n<br>                                              &lt;TextBox KeyboardNavigation.TabIndex=\"0\"  MaxLength=\"12\" Text=\"{Binding Path=OrderNo,UpdateSourceTrigger=PropertyChanged}\"&gt;\n<br>                            &lt;TextBox.InputBindings&gt;\n<br>                                &lt;KeyBinding Key=\"Enter\" Command=\"{Binding Path=StartACommand}\" CommandParameter=\"{Binding Path=Text,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}}}\"/&gt;\n<br>                            &lt;/TextBox.InputBindings&gt;\n<br>                        &lt;/TextBox&gt;"}]}