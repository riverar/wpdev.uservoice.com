{"id":"9788754","link":"https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/9788754-need-more-info-for-stack-trace","title":"Need more info for stack trace","body":"Now with Win10 Dashboard the stack trace only provide a snippet of the error which is included in the error lines. However with the new dashboard this is the only information that is provided on the dashboard. It's not enough for devs :(","votes":"80","user":"https://wpdev.uservoice.com/users/103400301-alexey-perezhogin","datetime":"2015-09-16","comments":[{"user":"https://wpdev.uservoice.com/users/715894186-tim","datetime":"2017-11-26","body":"The traces on errors for our app all appear to be snippets They don't lead back to our code. This is not helpful as we are unable to determine where in our app the error originated."},{"user":"https://wpdev.uservoice.com/users/104690139-halil","datetime":"2017-11-17","body":"I made an application that symbolicates the stack traces in the Windows Dev Center:\n<br><a rel=\"nofollow noreferrer\" href=\"https://github.com/hig-dev/WindowsDevCenterStacktraceSymbolicater\">https://github.com/hig-dev/WindowsDevCenterStacktraceSymbolicater</a>"},{"user":"https://wpdev.uservoice.com/users/68344437-clint-rutkas-msft","datetime":"2017-08-15","body":"@dmitry, hockeyapp is different than Dev Center reporting.  Soon with Visual Studio Mobile Center, they'll have better crash reporting / analytics as well for UWP."},{"user":"https://wpdev.uservoice.com/users/100197381-dmitry","datetime":"2017-08-14","body":"I am using UWP HockeyApp for crash reporting. Sometimes I get crash reports with non-existing offset information. I contacted HockeyApp and got response that it's how Native Windows Symbolicator deobfuscate those memory address and it can't be improved on their side."},{"user":"https://wpdev.uservoice.com/users/269407423-jeff-boulanger","datetime":"2016-10-24","body":"I totally agree with this.   We have a windows 8 application (we have yet to move to 10) on the store, and we get little to no information that is helpful in determining why a customer receives a hang or crashes.  Literally 1 line in the stack track, no offset number, just HANG_QUIESCE, or a very large callstack with only windows stack trace information and nothing about our application.   This is our number 1 error and we want to resolve it, but are unable to determine a course of action due to this limitted information.   I've posted on the forums a couple times, no help. I've tried to open a support ticked on the dev center, again, no help (was redirected to the same forums I had posted in).  "},{"user":"https://wpdev.uservoice.com/users/14085782-brandon","datetime":"2015-12-30","body":"Regarding 'Admin's request to provide what's missing... it'd be easier to say what's *not* missing: <a rel=\"nofollow noreferrer\" href=\"http://screencast.com/t/qgyV2PFacS4a\">http://screencast.com/t/qgyV2PFacS4a</a> <a rel=\"nofollow noreferrer\" href=\"http://screencast.com/t/ughm8uhg\">http://screencast.com/t/ughm8uhg</a> <a rel=\"nofollow noreferrer\" href=\"http://screencast.com/t/wTB4vd0X1U\">http://screencast.com/t/wTB4vd0X1U</a>"},{"user":"https://wpdev.uservoice.com/users/14085782-brandon","datetime":"2015-12-10","body":"Yeah, bottom line is the .Net Native stuff results in exception traces that are 100% useless. I've reported this to the App Insights team (same problem in those \"stack traces\" as well) and have been told the HockeyApp folks are going to be working on unwinding the .Net Native call stacks. Not sure what this means for people wanting to use AI. Seems like we'll have to import &amp; wire up two SDKs now to get everything we were previously getting with one. #notOptimal"},{"user":"https://wpdev.uservoice.com/users/18903030-msiccdev","datetime":"2015-12-10","body":"The problem is pretty much summed up already, just wanted to give my 2cts."},{"user":"https://wpdev.uservoice.com/users/121624587-mehrzadch","datetime":"2015-11-12","body":"Stack traces does not contain symbol names from our libraries in the unified Dev Center even though PDB files are uploaded, only offsets are included. here I have posted the detailed problem in msdn forums:\n<br><a rel=\"nofollow noreferrer\" href=\"https://social.msdn.microsoft.com/Forums/windowsapps/en-US/506e32df-8346-4c4f-a234-63204f58d282/uwp-dev-center-crash-report-does-not-contain-symbols?forum=wpdevelop\">https://social.msdn.microsoft.com/Forums/windowsapps/en-US/506e32df-8346-4c4f-a234-63204f58d282/uwp-dev-center-crash-report-does-not-contain-symbols?forum=wpdevelop</a>"},{"user":"https://wpdev.uservoice.com/users/52835095-alex-mitchell-robinson","datetime":"2015-11-06","body":"Dump files at the very least."},{"user":"https://wpdev.uservoice.com/users/12979781-clevlab","datetime":"2015-09-09","body":"Since the new dashboard, a lot of developers have crashes without stracktraces. And without stacktrace we can't understand and correct these issues..."},{"user":"https://wpdev.uservoice.com/users/21848179-x0zerocool0x","datetime":"2012-03-08","body":"I should clarify a little, in summary, I do my best to catch all my errors within the app, I have 0 crashes to date, I am currently having to rely on users sending me an error via email since the error is caught and the app doesnt crash. I think it would be benifical to the user and the developer. Developers would always get an accurate error list and users would not need to email the developer the error."},{"user":"https://wpdev.uservoice.com/users/21848179-x0zerocool0x","datetime":"2012-03-08","body":"AppHub currently will show the Crash Count and Stack Traces for those crashes. Even though I do implement error handling within my app, when an exception is caught I am forced to have the user email me the error. Showing the stack trace to a user is not a good option but without the stack trace its much harder to find the root cause of the issue. If we could submit our errors to an API (the same one that the phone uses to report our crashes) then we could easily catch our errors, show the user a message but then not rely on the user emailing us about the error and not have to worry about showing users our stack traces or other important data that we need to find the error."}]}