{"id":"6702008","link":"https://wpdev.uservoice.com/forums/427690-windows-presentation-foundation-wpf/suggestions/6702008-allow-c-expressions-like-basic-boolean-logic-inst","title":"Allow C# expressions like basic boolean logic instead of requiring converters all the time","body":"Please, allow C# expressions like basic boolean logic instead of requiring converters all the time","votes":"43","user":"https://wpdev.uservoice.com/users/251668417-caio-proiete","datetime":"2014-11-11","comments":[{"user":"https://wpdev.uservoice.com/users/251667802-imran-shaik","datetime":"2015-10-05","body":"I have came up with my own MarkupExtensions to do something similar, can you specify what exactly you need? "},{"user":"https://wpdev.uservoice.com/users/251669809-robert-armour","datetime":"2014-12-01","body":"I can see why the OP has asked for this, but we need to be wary of embedding too much logic in the binding attributes, for all but the simplest of expressions, there is potential for a lot of repeated logic scattered throughout a XAML file/project - just the thing that converters are good at abstracting. As usual a good case for using the right tool for the job. \n<br>Still probably worth a vote, though."},{"user":"https://wpdev.uservoice.com/users/251669797-theodore-zographos","datetime":"2014-11-17","body":"That suggestion alone would eliminate thousands of 1-line ValueConverters in an instant.\n"},{"user":"https://wpdev.uservoice.com/users/251669791-yves-goergen","datetime":"2014-11-14","body":"He's talking about WPF Bindings in XAML views that indeed can merely look up a value in the data context but not change, map or interpret it at all (except with a separate Converter class written in code like C#)."},{"user":"https://wpdev.uservoice.com/users/251669788-wouter-vos","datetime":"2014-11-14","body":"Is this not already possible? In say C#, javascript...\n<br>What language do you want this in?"}]}